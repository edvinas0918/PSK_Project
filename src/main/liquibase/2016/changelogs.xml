<databaseChangeLog xmlns='http://www.liquibase.org/xml/ns/dbchangelog'
                   xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                   xsi:schemaLocation='http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd'>
    <changeSet id="001" author="Mindaugas" context="test">
        <sql>

            

            CREATE TABLE MemberStatus(
            ID_MemberStatus INTEGER NOT NULL AUTO_INCREMENT,
            Name VARCHAR(40) NOT NULL,
            CONSTRAINT PRIMARY KEY PK_MemberStatus (ID_MemberStatus)
            );

            INSERT INTO MemberStatus (Name) VALUES
            ('Candidate'), ('Member');

            CREATE TABLE Member(
            ID_Member INTEGER NOT NULL AUTO_INCREMENT,
            FirstName VARCHAR(30) NOT NULL,
            LastName VARCHAR(30) NOT NULL,
            Email VARCHAR(50) NOT NULL,
            ID_MemberStatus INTEGER NOT NULL DEFAULT 1,
            Points INTEGER NOT NULL,
            ReservationGroup INTEGER NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Member (ID_Member),
            CONSTRAINT FOREIGN KEY FK_Member_ID_MemberStatus (ID_MemberStatus)
            REFERENCES MemberStatus(ID_MemberStatus)
            ON UPDATE CASCADE ON DELETE RESTRICT,
            CONSTRAINT UN_Member_Email UNIQUE (Email)
            );

            CREATE TABLE Recommendation(
            ID_Member INTEGER NOT NULL,
            Recommended INTEGER NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Recommendation (ID_Member, Recommended),
            CONSTRAINT FOREIGN KEY FK_Recommendation_ID_Member (ID_Member)
            REFERENCES Member(ID_Member)
            ON DELETE CASCADE,
            CONSTRAINT FOREIGN KEY FK_Recommendation_Recommended (Recommended)
            REFERENCES Member(ID_Member)
            ON DELETE CASCADE
            );

            CREATE TABLE Invitation(
            ID_Invitation INTEGER NOT NULL AUTO_INCREMENT,
            ID_Member INTEGER NOT NULL,
            Date DATETIME NOT NULL,
            Email VARCHAR(50) NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Invitation (ID_Invitation),
            CONSTRAINT FOREIGN KEY FK_Invitation_ID_Member (ID_Member)
            REFERENCES Member(ID_Member)
            ON DELETE CASCADE,
            CONSTRAINT UN_Invitation_Email UNIQUE(Email)
            );

            CREATE TABLE TaxType(
            ID_TaxType INTEGER NOT NULL AUTO_INCREMENT,
            Name VARCHAR(40) NOT NULL,
            CONSTRAINT PRIMARY KEY PK_TaxType (ID_TaxType)
            );
            INSERT INTO TaxType (Name) VALUES
            ('Member Tax'), ('Vasarnamio reservation tax'), ('Additional service tax');

            CREATE TABLE Tax(
            ID_Tax INTEGER NOT NULL AUTO_INCREMENT,
            ID_TaxType INTEGER NOT NULL,
            Name VARCHAR(50) NOT NULL,
            Price DECIMAL(5,2) NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Tax(ID_Tax),
            CONSTRAINT FOREIGN KEY FK_Tax_ID_TaxType (ID_TaxType)
            REFERENCES TaxType(ID_TaxType)
            ON UPDATE CASCADE ON DELETE RESTRICT
            );

            CREATE TABLE Payment(
            ID_Payment INTEGER NOT NULL AUTO_INCREMENT,
            ID_Tax INTEGER NOT NULL,
            ID_Member INTEGER NOT NULL,
            Data DATETIME NOT NULL,
            Confirmation BIT(1) NOT NULL DEFAULT 0,
            CONSTRAINT PRIMARY KEY PK_Payment (ID_Payment),
            CONSTRAINT FOREIGN KEY FK_Payment_ID_Tax (ID_Tax)
            REFERENCES Tax(ID_Tax)
            ON DELETE RESTRICT,
            CONSTRAINT FOREIGN KEY FK_Payment_ID_Member (ID_Member)
            REFERENCES Member(ID_Member)
            ON DELETE RESTRICT
            );

            CREATE TABLE Summerhouse(
            ID_Summerhouse INTEGER NOT NULL AUTO_INCREMENT,
            Number INTEGER NOT NULL,
            NumberOfSeats INTEGER NOT NULL,
            ID_Tax INTEGER NOT NULL,
            AvailabilityPeriod CHAR(11) NOT NULL, -- format: mm.dd-mm.dd
            Description VARCHAR(500),
            CONSTRAINT PRIMARY KEY PK_Summerhouse (ID_Summerhouse),
            CONSTRAINT FOREIGN KEY FK_Summerhouse_ID_Tax (ID_Tax)
            REFERENCES Tax(ID_Tax)
            ON DELETE RESTRICT,
            CONSTRAINT UN_Summerhouse_Number UNIQUE (Number)
            );

            CREATE TABLE SummerhouseReservation(
            ID_SummerhouseReservation INTEGER NOT NULL AUTO_INCREMENT,
            ID_Member INTEGER NOT NULL,
            ID_Summerhouse INTEGER NOT NULL,
            FromDate DATE NOT NULL,
            UntilDate DATE NOT NULL,
            CONSTRAINT PRIMARY KEY PK_SummerhouseReservation (ID_SummerhouseReservation),
            CONSTRAINT FOREIGN KEY FK_SummerhouseReservation_ID_Member (ID_Member)
            REFERENCES Member(ID_Member)
            ON DELETE RESTRICT,
            CONSTRAINT FOREIGN KEY FK_SummerhouseReservation_ID_Summerhouse(ID_Summerhouse)
            REFERENCES Summerhouse(ID_Summerhouse)
            ON DELETE RESTRICT
            );

            CREATE TABLE AdditionalServiceReservation(
            ID_SummerhouseReservation INTEGER NOT NULL,
            ID_Tax INTEGER NOT NULL,
            CONSTRAINT PRIMARY KEY PK_AdditionalServiceReservation (ID_SummerhouseReservation, ID_Tax)
            );
        </sql>
    </changeSet>
</databaseChangeLog>