<databaseChangeLog xmlns='http://www.liquibase.org/xml/ns/dbchangelog'
                   xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                   xsi:schemaLocation='http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd'>

    <changeSet author="Dziugas" id="001">
        <sql>
            DROP TABLE AdditionalServiceReservation;
            DROP TABLE SummerhouseReservation;
            DROP TABLE Summerhouse;
            DROP TABLE Payment;
            DROP TABLE Tax;
            DROP TABLE TaxType;
            DROP TABLE Invitation;
            DROP TABLE Recommendation;
            DROP TABLE Member;
            DROP TABLE MemberStatus;

            CREATE TABLE MemberStatus(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                Name VARCHAR(40) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_MemberStatus (ID)
            );

            INSERT INTO MemberStatus (Name) VALUES
            ('Candidate'), ('Member');

            CREATE TABLE ClubMember(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                FirstName VARCHAR(30) NOT NULL,
                LastName VARCHAR(30) NOT NULL,
                Email VARCHAR(50) NOT NULL,
                MemberStatusID INTEGER NOT NULL DEFAULT 1,
                Points INTEGER NOT NULL,
                ReservationGroup INTEGER NOT NULL,
                CONSTRAINT PRIMARY KEY PK_Member (ID),
                CONSTRAINT FOREIGN KEY FK_Member_ID_MemberStatus (MemberStatusID)
                REFERENCES MemberStatus(ID)
                ON UPDATE CASCADE ON DELETE RESTRICT,
                CONSTRAINT UN_Member_Email UNIQUE (Email)
            );

            CREATE TABLE Recommendation(
                MemberID INTEGER NOT NULL,
                RecommendedMemberID INTEGER NOT NULL,
                CONSTRAINT PRIMARY KEY PK_Recommendation (MemberID, RecommendedMemberID),
                CONSTRAINT FOREIGN KEY FK_Recommendation_ID_Member (MemberID)
                REFERENCES ClubMember(ID)
                ON DELETE CASCADE,
                CONSTRAINT FOREIGN KEY FK_Recommendation_Recommended (RecommendedMemberID)
                REFERENCES ClubMember(ID)
                ON DELETE CASCADE
            );

            CREATE TABLE Invitation(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                MemberID INTEGER NOT NULL,
                InvitationDate DATETIME NOT NULL,
                Email VARCHAR(50) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_Invitation (ID),
                CONSTRAINT FOREIGN KEY FK_Invitation_ID_Member (MemberID)
                REFERENCES ClubMember(ID)
                ON DELETE CASCADE,
                CONSTRAINT UN_Invitation_Email UNIQUE(Email)
            );

            CREATE TABLE TaxType(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                Name VARCHAR(40) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_TaxType (ID)
            );

            INSERT INTO TaxType (Name) VALUES
            ('Member Tax'), ('Vasarnamio reservation tax'), ('Additional service tax');


            CREATE TABLE Tax(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                TaxTypeID INTEGER NOT NULL,
                Name VARCHAR(50) NOT NULL,
                Price DECIMAL(5,2) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_Tax(ID),
                CONSTRAINT FOREIGN KEY FK_Tax_ID_TaxType (TaxTypeID)
                REFERENCES TaxType(ID)
                ON UPDATE CASCADE ON DELETE RESTRICT
            );

            CREATE TABLE Payment(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                TaxID INTEGER NOT NULL,
                MemberID INTEGER NOT NULL,
                PaymentDate DATETIME NOT NULL,
                Confirmed BIT(1) NOT NULL DEFAULT 0,
                CONSTRAINT PRIMARY KEY PK_Payment (ID),
                CONSTRAINT FOREIGN KEY FK_Payment_ID_Tax (TaxID)
                REFERENCES Tax(ID)
                ON DELETE RESTRICT,
                CONSTRAINT FOREIGN KEY FK_Payment_ID_Member (MemberID)
                REFERENCES ClubMember(ID)
                ON DELETE RESTRICT
            );

            CREATE TABLE Summerhouse(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                Number INTEGER NOT NULL,
                Capacity INTEGER NOT NULL,
                TaxID INTEGER NOT NULL,
                AvailabilityPeriod CHAR(11) NOT NULL, -- format: mm.dd-mm.dd
                Description VARCHAR(500),
                CONSTRAINT PRIMARY KEY PK_Summerhouse (ID),
                CONSTRAINT FOREIGN KEY FK_Summerhouse_ID_Tax (TaxID)
                REFERENCES Tax(ID)
                ON DELETE RESTRICT,
                CONSTRAINT UN_Summerhouse_Number UNIQUE (Number)
            );

            CREATE TABLE SummerhouseReservation(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                MemberID INTEGER NOT NULL,
                SummerhouseID INTEGER NOT NULL,
                FromDate DATE NOT NULL,
                UntilDate DATE NOT NULL,
                CONSTRAINT PRIMARY KEY PK_SummerhouseReservation (ID),
                CONSTRAINT FOREIGN KEY FK_SummerhouseReservation_ID_Member (MemberID)
                REFERENCES ClubMember(ID)
                ON DELETE RESTRICT,
                CONSTRAINT FOREIGN KEY FK_SummerhouseReservation_ID_Summerhouse(SummerhouseID)
                REFERENCES Summerhouse(ID)
                ON DELETE RESTRICT
            );

            CREATE TABLE AdditionalServiceReservation(
                SummerhouseReservationID INTEGER NOT NULL,
                TaxID INTEGER NOT NULL,
                CONSTRAINT PRIMARY KEY PK_AdditionalServiceReservation (SummerhouseReservationID, TaxID)
            );

        </sql>
    </changeSet>

    <changeSet id="002" author="Mindaugas">
        <sql>
            insert into taxtype (name) values ("aaaaaa");
            insert into tax (taxtypeid, name, price) values ("1", "tax", "100");
            insert into summerhouse (number, capacity, taxid, availabilityperiod, description) values ("2", "1", "1", "1", "aaaaaa");
        </sql>
    </changeSet>

    <changeSet author="Edvinas" id="003">
        <sql>
            INSERT INTO MemberStatus (Name) VALUES
            ('Admin');
        </sql>
    </changeSet>

    <changeSet author="Gintautas" id="004">
        <sql>
            CREATE TABLE Settings(
            ID INTEGER NOT NULL AUTO_INCREMENT,
            Name VARCHAR(40) NOT NULL,
            Value INTEGER NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Settings (ID)
            );

            INSERT INTO Settings (Name, Value) VALUES ('Maximum members count', 100), ('Minimal recommendations count', 2);
            INSERT INTO Tax (TaxTypeID, Name, Price) VALUES (1, 'Member Tax', 50);
        </sql>
    </changeSet>

    <changeSet author="Gintautas" id="005">
        <sql>
            delete from tax where ID = 2;
            update tax set Name = "Member Tax" where ID = 1;
        </sql>
    </changeSet>

    <changeSet author="Gintautas" id="006">
        <sql>
            drop table Settings;
            CREATE TABLE Settings(
            ID INTEGER NOT NULL AUTO_INCREMENT,
            Name VARCHAR(40) NOT NULL,
            Value VARCHAR(40) NOT NULL,
            CONSTRAINT PRIMARY KEY PK_Settings (ID)
            );

            INSERT INTO Settings (Name, Value)
            VALUES ('Maximum members count', '100'),
            ('Minimal recommendations count', '2');
        </sql>
    </changeSet>

    <changeSet id="007" author="Dziugas">
        <sql>
            CREATE TABLE MemberFormField(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                FieldName VARCHAR(40) NOT NULL,
                Visible BIT(1) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_MemberFormField (ID)
            );

            INSERT INTO MemberFormField (FieldName, Visible)
            VALUES ('firstName', 1),
            ('lastName', 1),
            ('email', 1),
            ('status', 0),
            ('points', 1),
            ('reservationGroup', 0);
        </sql>
    </changeSet>

    <changeSet id="008" author="Mindaugas">
        <dropColumn tableName="summerhouse" columnName="AvailabilityPeriod"/>
        <addColumn tableName="summerhouse">
            <column name="BeginPeriod" type="DATE"/>
            <column name="EndPeriod" type="DATE"/>
        </addColumn>
    </changeSet>
    <changeSet id="009" author="Gintautas">
        <sql>
            truncate table labanorasfriends.settings;

            insert into labanorasfriends.settings (Name, Value) values
            ("Maksimalus narių skaičius", "100"),
            ("Minimalus rekomendacijų kiekis", "2"),
            ("Rezervacijos atšaukimas","7")
        </sql>
    </changeSet>

    <changeSet id="009" author="Edvinas">
        <sql>
            ALTER TABLE clubmember
            ADD COLUMN token VARCHAR(200);
            ALTER TABLE clubmember
            ADD COLUMN fbUserId VARCHAR(20);
        </sql>
    </changeSet>
    <changeSet id="010" author="Gintautas">
        <sql>
            ALTER TABLE tax MODIFY Price INTEGER;
        </sql>
    </changeSet>
    <changeSet author="Dziugas" id="dz001">
        <sql>
            CREATE TABLE MoneyOperationLogEntry(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                member INTEGER NOT NULL,
                memberFirstName VARCHAR (30),
                memberLastName VARCHAR (30),
                memberStatus INTEGER,
                operationTime DATETIME,
                invokedMethod VARCHAR(60),
                CONSTRAINT FOREIGN KEY FK_MoneyOperationLogEntry_member (member)
                    REFERENCES ClubMember(ID),
                CONSTRAINT FOREIGN KEY FK_MoneyOperationLogEntry_memberStatus (memberStatus)
                    REFERENCES MemberStatus(ID),
                CONSTRAINT PRIMARY KEY PK_MoneyOperationLogEntry (ID)
            );
        </sql>
    </changeSet>
    <changeSet author="Aurimas" id="ar001">
        <sql>
            ALTER TABLE clubmember
            ADD COLUMN membershipExpirationDate DATE;
        </sql>
    </changeSet>
    <changeSet id="min001" author="Mindaugas">
        <createTable tableName="AdditionalService">
            <column name="ID" type="INTEGER">
                <constraints nullable="false" primaryKey="true" primaryKeyName="ADDITIONAL_SERVICE_PK" />
            </column>
            <column name="Name" type="VARCHAR(500)">
                <constraints nullable="false"/>
            </column>
            <column name="Description" type="TEXT"></column>
        </createTable>
    </changeSet>
    <changeSet id="min002" author="Mindaugas">
        <addColumn tableName="AdditionalService">
            <column name="PricePoints" type="INTEGER">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet id="min003" author="Mindaugas">
        <sql>
            CREATE TABLE Summerhouse_Services
            (
            summerhouse_id INT NOT NULL,
            service_id INT NOT NULL,
            PRIMARY KEY (summerhouse_id, service_id),
            FOREIGN KEY (summerhouse_id) REFERENCES Summerhouse(id) ON UPDATE CASCADE,
            FOREIGN KEY (service_id) REFERENCES AdditionalService(id) ON UPDATE CASCADE
            );
        </sql>
    </changeSet>
    <changeSet author="Dziugas" id="dz002">
        <sql>
            drop table Settings;
            CREATE TABLE Settings(
                ID INTEGER NOT NULL AUTO_INCREMENT,
                Name VARCHAR(40) NOT NULL,
                Value VARCHAR(40) NOT NULL,
                ReferenceCode VARCHAR(40) NOT NULL,
                CONSTRAINT PRIMARY KEY PK_Settings (ID)
            );

            INSERT INTO Settings (Name, Value, ReferenceCode)
            VALUES ('Maximum members count', '100', 'membersMax'),
                ('Minimal recommendations count', '2', 'recommendationsMin'),
                ("Rezervacijos atšaukimas","7", 'reservationCancellationDeadline');
        </sql>
    </changeSet>
    <changeSet author="Dziugas" id="dz003">
        <sql>
            ALTER TABLE Settings
            ADD UNIQUE (ReferenceCode);

            INSERT INTO Settings (Name, Value,ReferenceCode)
            VALUES ("Rezervacijos grupių skaičius", '5', 'reservationGroupNumber');
        </sql>
    </changeSet>
    <changeSet id="min004" author="Mindaugas">
        <sql>
            insert into additionalservice (id, name, description, pricepoints) values (1, "hitleris nepadare nieko blogo", "aaaaaa", "1939");
            insert into additionalservice (id, name, description, pricepoints) values (2, "holokaustas yra melas", "aha;]", "69");
            insert into additionalservice (id, name, description, pricepoints) values (3, "9/11 was an inside job", "ne", "112");
            insert into additionalservice (id, name, description, pricepoints) values (4, "reaktyvinis kuras negali lydyti plieniniu siju", "ne", "112");
        </sql>
    </changeSet>
    <changeSet id="min005" author="Mindaugas">
        <addColumn tableName="AdditionalServiceReservation">
            <column name="ServiceStart" type="DATE"/>
            <column name="ServiceEnd" type="DATE"/>
            <column name="AdditionalServiceID" type="INTEGER">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addForeignKeyConstraint baseTableName="AdditionalServiceReservation" baseColumnNames="AdditionalServiceID" constraintName="ADD_SERVICE_RESERVATION_FK" referencedTableName="additionalservice"
                                 referencedColumnNames="ID"/>
    </changeSet>
    <changeSet id="min006" author="Mindaugas">
        <addColumn tableName="summerhouse">
            <column name="Image" type="LONGTEXT"></column>
        </addColumn>
    </changeSet>
</databaseChangeLog>